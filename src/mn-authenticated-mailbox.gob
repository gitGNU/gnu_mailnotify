/*
 * Mail Notification
 * Copyright (C) 2003-2007 Jean-Yves Lefort <jylefort@brutele.be>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

requires 2.0.14

%headertop{
#include "mn-mailbox.h"
%}

%{
#include "config.h"
#include "mn-mailbox-private.h"
#include "mn-util.h"
%}

class MN:Authenticated:Mailbox from MN:Mailbox (abstract)
{
  public char *username destroywith g_free;
  property STRING username (link, flags = MN_MAILBOX_PARAM_PERMANENT);

  public char *password destroywith g_free;
  property STRING password (link, flags = MN_MAILBOX_PARAM_PERMANENT);

  private gboolean checking;

  override (MN:Mailbox) void
    check (MNMailbox *mailbox)
  {
    Self *self = SELF(mailbox);

    if (selfp->checking)
      return;

    PARENT_HANDLER(mailbox);

    selfp->checking = TRUE;
    mn_mailbox_set_error(mailbox, NULL);

    g_object_ref(self);
    mn_thread_create((GThreadFunc) self_check_thread_cb, self);
  }

  private void
    check_thread_cb (self)
  {
    self_authenticated_check(self);

    GDK_THREADS_ENTER();

    selfp->checking = FALSE;
    g_object_unref(self);

    gdk_flush();
    GDK_THREADS_LEAVE();
  }

  virtual private void
    authenticated_check (self);
}
