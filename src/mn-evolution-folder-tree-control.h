/* Generated by GOB (v2.0.14)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <libbonoboui.h>

#ifndef __MN_EVOLUTION_FOLDER_TREE_CONTROL_H__
#define __MN_EVOLUTION_FOLDER_TREE_CONTROL_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define MN_TYPE_EVOLUTION_FOLDER_TREE_CONTROL	(mn_evolution_folder_tree_control_get_type())
#define MN_EVOLUTION_FOLDER_TREE_CONTROL(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_evolution_folder_tree_control_get_type(), MNEvolutionFolderTreeControl)
#define MN_EVOLUTION_FOLDER_TREE_CONTROL_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_evolution_folder_tree_control_get_type(), MNEvolutionFolderTreeControl const)
#define MN_EVOLUTION_FOLDER_TREE_CONTROL_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_evolution_folder_tree_control_get_type(), MNEvolutionFolderTreeControlClass)
#define MN_IS_EVOLUTION_FOLDER_TREE_CONTROL(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_evolution_folder_tree_control_get_type ())

#define MN_EVOLUTION_FOLDER_TREE_CONTROL_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_evolution_folder_tree_control_get_type(), MNEvolutionFolderTreeControlClass)

/* Private structure type */
typedef struct _MNEvolutionFolderTreeControlPrivate MNEvolutionFolderTreeControlPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_EVOLUTION_FOLDER_TREE_CONTROL__
#define __TYPEDEF_MN_EVOLUTION_FOLDER_TREE_CONTROL__
typedef struct _MNEvolutionFolderTreeControl MNEvolutionFolderTreeControl;
#endif
struct _MNEvolutionFolderTreeControl {
	BonoboControl __parent__;
	/*< private >*/
	MNEvolutionFolderTreeControlPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNEvolutionFolderTreeControlClass MNEvolutionFolderTreeControlClass;
struct _MNEvolutionFolderTreeControlClass {
	BonoboControlClass __parent__;
};


/*
 * Public methods
 */
GType	mn_evolution_folder_tree_control_get_type	(void);
BonoboObject * 	mn_evolution_folder_tree_control_factory_cb	(BonoboGenericFactory * factory,
					const char * iid,
					gpointer closure);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
