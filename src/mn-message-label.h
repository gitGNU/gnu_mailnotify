/* Generated by GOB (v2.0.10)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <gtk/gtk.h>
#include "mn-message.h"

#ifndef __MN_MESSAGE_LABEL_H__
#define __MN_MESSAGE_LABEL_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define MN_TYPE_MESSAGE_LABEL	(mn_message_label_get_type())
#define MN_MESSAGE_LABEL(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_message_label_get_type(), MNMessageLabel)
#define MN_MESSAGE_LABEL_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_message_label_get_type(), MNMessageLabel const)
#define MN_MESSAGE_LABEL_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_message_label_get_type(), MNMessageLabelClass)
#define MN_IS_MESSAGE_LABEL(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_message_label_get_type ())

#define MN_MESSAGE_LABEL_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_message_label_get_type(), MNMessageLabelClass)

/* Private structure type */
typedef struct _MNMessageLabelPrivate MNMessageLabelPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_MESSAGE_LABEL__
#define __TYPEDEF_MN_MESSAGE_LABEL__
typedef struct _MNMessageLabel MNMessageLabel;
#endif
struct _MNMessageLabel {
	GtkLabel __parent__;
	/*< private >*/
	MNMessageLabelPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNMessageLabelClass MNMessageLabelClass;
struct _MNMessageLabelClass {
	GtkLabelClass __parent__;
};


/*
 * Public methods
 */
GType	mn_message_label_get_type	(void);
GtkWidget * 	mn_message_label_new	(MNMessage * message);

/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define MN_MESSAGE_LABEL_PROP_MESSAGE(arg)    	"message", __extension__ ({GObject *z = (arg); z;})
#define MN_MESSAGE_LABEL_GET_PROP_MESSAGE(arg)	"message", __extension__ ({GObject **z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define MN_MESSAGE_LABEL_PROP_MESSAGE(arg)    	"message",(GObject *)(arg)
#define MN_MESSAGE_LABEL_GET_PROP_MESSAGE(arg)	"message",(GObject **)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
