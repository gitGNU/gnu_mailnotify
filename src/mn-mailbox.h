/* Generated by GOB (v2.0.9)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <stdarg.h>

#ifndef __MN_MAILBOX_H__
#define __MN_MAILBOX_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



#define MN_MAILBOX_CAN_CHECK(self) \
  (MN_MAILBOX_GET_CLASS((self))->impl_check != NULL || MN_MAILBOX_GET_CLASS((self))->impl_threaded_check != NULL)


/*
 * Type checking and casting macros
 */
#define MN_TYPE_MAILBOX	(mn_mailbox_get_type())
#define MN_MAILBOX(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_mailbox_get_type(), MNMailbox)
#define MN_MAILBOX_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_mailbox_get_type(), MNMailbox const)
#define MN_MAILBOX_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_mailbox_get_type(), MNMailboxClass)
#define MN_IS_MAILBOX(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_mailbox_get_type ())

#define MN_MAILBOX_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_mailbox_get_type(), MNMailboxClass)

/* Private structure type */
typedef struct _MNMailboxPrivate MNMailboxPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_MAILBOX__
#define __TYPEDEF_MN_MAILBOX__
typedef struct _MNMailbox MNMailbox;
#endif
struct _MNMailbox {
	GObject __parent__;
	/*< private >*/
	MNMailboxPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNMailboxClass MNMailboxClass;
struct _MNMailboxClass {
	GObjectClass __parent__;
	gboolean (* impl_is) (MNMailbox * self, const char * uri);
	void (* impl_check) (MNMailbox * self);
	void (* impl_threaded_check) (MNMailbox * self);
	const char * stock_id;
	const char * format;
};


/*
 * Public methods
 */
GType	mn_mailbox_get_type	(void);
const char * 	mn_mailbox_get_uri	(MNMailbox * self);
const char * 	mn_mailbox_get_name	(MNMailbox * self);
gboolean 	mn_mailbox_get_automatic	(MNMailbox * self);
void 	mn_mailbox_set_automatic	(MNMailbox * self,
					gboolean val);
gboolean 	mn_mailbox_get_has_new	(MNMailbox * self);
void 	mn_mailbox_set_has_new	(MNMailbox * self,
					gboolean val);
const char * 	mn_mailbox_get_error	(MNMailbox * self);
const GType * 	mn_mailbox_get_types	(void);
void 	mn_mailbox_new_async	(const char * uri,
					gpointer callback,
					gpointer user_data);
void 	mn_mailbox_check	(MNMailbox * self);

/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define MN_MAILBOX_PROP_URI(arg)    	"uri", __extension__ ({gchar *z = (arg); z;})
#define MN_MAILBOX_PROP_NAME(arg)    	"name", __extension__ ({gchar *z = (arg); z;})
#define MN_MAILBOX_GET_PROP_NAME(arg)	"name", __extension__ ({gchar **z = (arg); z;})
#define MN_MAILBOX_PROP_AUTOMATIC(arg)    	"automatic", __extension__ ({gboolean z = (arg); z;})
#define MN_MAILBOX_GET_PROP_AUTOMATIC(arg)	"automatic", __extension__ ({gboolean *z = (arg); z;})
#define MN_MAILBOX_PROP_HAS_NEW(arg)    	"has_new", __extension__ ({gboolean z = (arg); z;})
#define MN_MAILBOX_GET_PROP_HAS_NEW(arg)	"has_new", __extension__ ({gboolean *z = (arg); z;})
#define MN_MAILBOX_PROP_ERROR(arg)    	"error", __extension__ ({gchar *z = (arg); z;})
#define MN_MAILBOX_GET_PROP_ERROR(arg)	"error", __extension__ ({gchar **z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define MN_MAILBOX_PROP_URI(arg)    	"uri",(gchar *)(arg)
#define MN_MAILBOX_PROP_NAME(arg)    	"name",(gchar *)(arg)
#define MN_MAILBOX_GET_PROP_NAME(arg)	"name",(gchar **)(arg)
#define MN_MAILBOX_PROP_AUTOMATIC(arg)    	"automatic",(gboolean )(arg)
#define MN_MAILBOX_GET_PROP_AUTOMATIC(arg)	"automatic",(gboolean *)(arg)
#define MN_MAILBOX_PROP_HAS_NEW(arg)    	"has_new",(gboolean )(arg)
#define MN_MAILBOX_GET_PROP_HAS_NEW(arg)	"has_new",(gboolean *)(arg)
#define MN_MAILBOX_PROP_ERROR(arg)    	"error",(gchar *)(arg)
#define MN_MAILBOX_GET_PROP_ERROR(arg)	"error",(gchar **)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
