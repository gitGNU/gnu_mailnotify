/* Generated by GOB (v2.0.14)   (do not edit directly) */

#ifndef __MN_MAILBOX_PRIVATE_H__
#define __MN_MAILBOX_PRIVATE_H__

#include "mn-mailbox.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


#line 35 "mn-mailbox.gob"

#include "mn-locked-callback.h"

typedef enum
{
  /* save to mailboxes.xml */
  MN_MAILBOX_PARAM_PERMANENT	= 1 << (G_PARAM_USER_SHIFT + 0),

  /* require a string property to be non-empty */
  MN_MAILBOX_PARAM_REQUIRED	= 1 << (G_PARAM_USER_SHIFT + 1),

  /* ignore the case of a string property when checking if it has the default value */
  MN_MAILBOX_PARAM_IGNORE_CASE	= 1 << (G_PARAM_USER_SHIFT + 2)
} MNMailboxParamFlags;

#line 30 "mn-mailbox-private.h"
struct _MNMailboxPrivate {
#line 97 "mn-mailbox.gob"
	gboolean added;
#line 139 "mn-mailbox.gob"
	MNLockedGSource * check_timeout_source;
#line 148 "mn-mailbox.gob"
	gboolean poll;
#line 181 "mn-mailbox.gob"
	GSList * unfiltered_messages;
#line 203 "mn-mailbox.gob"
	GHashTable * messages_hash_table;
#line 42 "mn-mailbox-private.h"
};
void 	mn_mailbox_set_error	(MNMailbox * self, const char * format, ...);
void 	mn_mailbox_notice	(MNMailbox * self, const char * format, ...);
void 	mn_mailbox_warning	(MNMailbox * self, const char * format, ...);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
